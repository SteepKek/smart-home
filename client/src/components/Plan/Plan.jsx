import React from 'react'
import './Plan.css';
import SensorData from '../SensorData/SensorData';

// Define device positions - easier to manage all positions in one place
const DEVICE_POSITIONS = [
  // –ê–∫—Ç–∏–≤–Ω–∞ –∑–æ–Ω–∞ (–≥–∞—Ä–∞–∂ —Ç–∞ –ø—Ä–∏–ª–µ–≥–ª—ñ –∫—ñ–º–Ω–∞—Ç–∏)
  { id: 'garage-light', type: 'light', x: 25, y: 25, title: '–°–≤—ñ—Ç–ª–æ –≤ –≥–∞—Ä–∞–∂—ñ', isActive: true },
  { id: 'window1', type: 'window', x: 3.6, y: 45, title: '–í—ñ–∫–Ω–æ 1 –≤ –≥–∞—Ä–∞–∂—ñ', isActive: true },
  
  // –ù–µ–∞–∫—Ç–∏–≤–Ω–∞ –∑–æ–Ω–∞ (—Ä–µ—à—Ç–∞ –±—É–¥–∏–Ω–∫—É)
  { id: 'kitchen-light', type: 'light', x: 70, y: 23.5, title: '–°–≤—ñ—Ç–ª–æ –Ω–∞ –∫—É—Ö–Ω—ñ', isActive: false },
  { id: 'bedroom1-light', type: 'light', x: 85, y: 60, title: '–°–≤—ñ—Ç–ª–æ –≤ —Å–ø–∞–ª—å–Ω—ñ 1', isActive: false },
  { id: 'wc-light', type: 'light', x: 53, y: 60, title: '–°–≤—ñ—Ç–ª–æ —É –≤–±–∏—Ä–∞–ª—å–Ω—ñ', isActive: false },
  { id: 'bathroom-light', type: 'light', x: 55, y: 70, title: '–°–≤—ñ—Ç–ª–æ —É –≤–∞–Ω–Ω—ñ–π', isActive: false },
  { id: 'bedroom2-light', type: 'light', x: 85, y: 85, title: '–°–≤—ñ—Ç–ª–æ –≤ —Å–ø–∞–ª—å–Ω—ñ 2', isActive: false },
  { id: 'bedroom3-light', type: 'light', x: 61, y: 89, title: '–°–≤—ñ—Ç–ª–æ –≤ —Å–ø–∞–ª—å–Ω—ñ 3', isActive: false },
  { id: 'window2', type: 'window', x: 3.6, y: 31, title: '–í—ñ–∫–Ω–æ 2 –≤ –≥–∞—Ä–∞–∂—ñ', isActive: false },
  { id: 'window3', type: 'window', x: 57.8, y: 19.6, title: '–í—ñ–∫–Ω–æ 1 –Ω–∞ –∫—É—Ö–Ω—ñ', isActive: false },
  { id: 'window4', type: 'window', x: 96.5, y: 39, title: '–í—ñ–∫–Ω–æ 2 –Ω–∞ –∫—É—Ö–Ω—ñ', isActive: false },
  { id: 'window5', type: 'window', x: 96.5, y: 56.3, title: '–í—ñ–∫–Ω–æ –≤ —Å–ø–∞–ª—å–Ω—ñ 1', isActive: false },
  { id: 'window6', type: 'window', x: 83, y: 97.8, title: '–í—ñ–∫–Ω–æ –≤ —Å–ø–∞–ª—å–Ω—ñ 2', isActive: false },
  { id: 'window7', type: 'window', x: 60.8, y: 97.8, title: '–í—ñ–∫–Ω–æ –≤ —Å–ø–∞–ª—å–Ω—ñ 3', isActive: false },
  { id: 'window8', type: 'window', x: 47.3, y: 71.3, title: '–í—ñ–∫–Ω–æ –≤ –≤–∞–Ω–Ω—ñ–π', isActive: false },
];

const DeviceButton = ({ type, x, y, title, isActive }) => {
  const getIcon = (type) => {
    switch (type) {
      case 'light':
        return 'üí°';
      case 'window':
        return 'ü™ü';
      default:
        return 'üì±';
    }
  };

  // –î–æ–¥–∞—î–º–æ —Ä—ñ–∑–Ω—ñ —Å—Ç–∏–ª—ñ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤
  const getButtonStyle = (type) => {
    const baseStyle = {
      top: `${y}%`,
      left: `${x}%`,
    };

    switch (type) {
      case 'window':
        return {
          ...baseStyle,
          backgroundColor: '#e3f2fd',
          border: '2px solid #64b5f6'
        };
      default:
        return baseStyle;
    }
  };

  const handleClick = (e) => {
    if (!isActive) {
      e.preventDefault();
      return;
    }
    // –¢—É—Ç –±—É–¥–µ –ª–æ–≥—ñ–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∫–ª—ñ–∫—É
  };

  return (
    <button 
      className='device-button'
      style={getButtonStyle(type)}
      title={`${title}${!isActive ? ' (–ù–µ–∞–∫—Ç–∏–≤–Ω–∞ –∑–æ–Ω–∞)' : ''}`}
      onClick={handleClick}
      data-type={type}
      disabled={!isActive}
    >
      {getIcon(type)}
    </button>
  );
};

function Plan() {
  return (
    <div className='plan-page'>
      <SensorData />
      <div className='plan-container'>
        <div className='plan-wrapper'>
          <img 
            src="plan.PNG" 
            alt="House Floor Plan" 
            className='plan-image'
            loading="eager"
          />
          <div className="buttons-overlay">
            {DEVICE_POSITIONS.map(device => (
              <DeviceButton
                key={device.id}
                {...device}
              />
            ))}
          </div>
        </div>
      </div>
    </div>
  );
}

export default Plan
